---
const { title } = Astro.props;
import { Icon } from 'astro-icon';
---

<div class="categories-menu">
  <button id="menubutton">{title}<Icon name="chevron-down" /></button>
  <ul class="dropdown-menu">
    <li><a href="#">Popular</a></li>
    <li><a href="#">Design tools</a></li>
    <li><a href="#">Code tools</a></li>
    <li><a href="#">Cloud services</a></li>
  </ul>
</div>

<script>
  const categoriesMenu = document.querySelector('.dropdown-menu');
  const toggleButton = document.querySelector('#menubutton');

  toggleButton.addEventListener('click', () => {
    categoriesMenu.classList.toggle('opened');
    toggleButton.classList.toggle('flipped');
  });

  window.addEventListener('click', (e) => {
    const clickedElement = e.target as HTMLElement;
    if (!clickedElement.matches('#menubutton')) {
      if (categoriesMenu.classList.contains('opened')) {
        categoriesMenu.classList.remove('opened');
      }
    }
  });
</script>

<style lang="scss">
  @import '../styles/colors';
  @import '../styles/mixins';

  .categories-menu {
    position: relative;
  }

  button {
    @include flexRow;
    gap: clamp(1px, 0.5vw, 0.375rem);
    background-color: $white;
    padding: 0.5em 0; // extend clickable area
    transition: color 0.2s;

    [astro-icon] {
      height: clamp(1rem, 2vw, 1.5rem);
      transition: transform 0.3s ease-in-out;
    }

    &.flipped svg {
      transform: rotate(-180deg);
    }

    &:hover {
      color: $gray200;
    }
  }
  .dropdown-menu {
    visibility: hidden;
    opacity: 0;

    position: absolute;
    right: -1rem;
    top: calc(100% + 0.25rem);
    padding: 1rem 0;
    border-radius: 1rem;
    max-width: 16rem;
    min-width: max-content;
    transition: opacity 0.2s ease-in-out, visibility 0s 1s;
    -webkit-user-select: none; /* Safari */
    user-select: none;

    background-color: $white;
    box-shadow: $shadow_low;

    &:hover {
      box-shadow: $shadow_high;
      transform: translateY(-2px);
    }

    a {
      padding: 0.5rem 2rem;
    }

    &.opened {
      visibility: visible;
      opacity: 1;
      transition: box-shadow 0.2s ease-in-out, transform 0.2s ease-in-out, opacity 0.2s ease-in-out, visibility 0s;
    }
  }
</style>
